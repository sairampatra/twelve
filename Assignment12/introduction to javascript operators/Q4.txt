Q-Discuss the precedence and associativity of operators in JavaScript. Why is understanding these concepts
important?

A-// Precedence of Operators:
// The precedence of operators in JavaScript determines the order in which they are evaluated.
// Operators with higher precedence are evaluated first.
// Example:
let result = 5 + 3 * 2;
// In this case, multiplication has a higher precedence than addition.

// Associativity of Operators:
// Associativity defines the grouping of operators with the same precedence.
// There are two types: left-to-right and right-to-left.
// Example:
let result = 10 / 2 / 5;
// Division has left-to-right associativity, so 10 / 2 is evaluated first, then divided by 5.

// Importance of Understanding Precedence and Associativity:
// 1. Correct Expression Evaluation:
//    - Ensures expressions are evaluated in the intended order.
//    - Helps avoid errors and unexpected results.
// 2. Predictable Code Behavior:
//    - Prevents ambiguity in expressions with multiple operators of the same precedence.
//    - Code behaves as expected, enhancing predictability.
// 3. Efficient Coding:
//    - Enables concise and efficient expression writing.
//    - Reduces the need for excessive parentheses to clarify the order of evaluation.
// 4. Avoiding Bugs:
//    - Misunderstanding precedence and associativity can lead to subtle bugs that are hard to spot.
